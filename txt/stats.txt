This was some testing into the effectiveness of the search ordering;
how often was the "best" move found as the nth move examined.
A better move ordering in the search means that more branches will be
cut off by the Alpha-Beta search, so the search will be quicker.
A quicker AI means that a deeper search can be performed, which leads to
an AI that plays better.

Best value was at:
Depth	v0	v1		v2		v3		v4		v5		v6		v7		v8
0	0		0		0		0		0		0		0		0		0
1	5409	1567	949		518		377		290		296		264		267
2	38027	7087	3638	1839	1149	709		539		401		307
3	64253	12626	7297	3843	3076	2412	2172	1942	1942
4	241103	32719	19151	9413	6598	0		0		0		0
5	122573	19821	12779	6539	3979	0		0		0		0

Best value was at:
Depth	v0	v1		v2		v3		v4		v5		v6		v7		v8
0	0		0		0		0		0		0		0		0		0
1	5198	1543	929		535		384		261		283		248		208
2	35764	6760	3538	1813	1076	624		514		390		335
3	62533	11614	7027	3660	2784	2101	1918	1570	1424
4	225285	28962	16531	8172	5901	0		0		0		0
5	122199	20559	13338	6626	4447	0		0		0		0

Depth 0 B/L Skipped 0 OK, missed 0
Depth 1 B/L Skipped 0.482092411599 OK, missed 0.0830275676202
Depth 2 B/L Skipped 0.332219128344 OK, missed 0.0569532524564
Depth 3 B/L Skipped 0.417156980686 OK, missed 0.07136590428
Depth 4 B/L Skipped 0.169683833427 OK, missed 0.0387833116055

Best value was at:
Depth	v0	v1	v2	v3	v4	v5	v6	v7	v8	v9	v10	v11	v12	v13	v14
0	0	0	0	0	0	0	0	0	0	0
1	7009	1980	1363	772	493	342	265	173	194	132	103	92	94	75	51
2	78296	13759	7020	2867	1808	1024	664	472	341	268	203	194	133	107	70
3	162573	28295	14959	8778	6097	4363	3445	2866	2314	2095	1632	1329	1201	1081	1033
4	867479	79241	40074	18943	12196	7978	6166	4285	2916	2102	1622	1348	1023	886	697
5	657741	61872	40079	18907	10765	7224	4042	2656	1648	997	661	509	337	245	203

Depth 0 B/L Skipped 0 OK, missed 0
Depth 1 B/L Skipped 0.558214642534 OK, missed 0.0926446556224
Depth 2 B/L Skipped 0.395186210427 OK, missed 0.0538378110214
Depth 3 B/L Skipped 0.52835629047 OK, missed 0.069239046722
Depth 4 B/L Skipped 0.406399102487 OK, missed 0.0465983138289

-----------
B/W:[0, 16, 24] won: {'Defender': 20, 'Contender': 20} C/D avg. time: 1.06380260937
Best value was at:
Depth	v0	v1	v2	v3	v4	v5	v6	v7	v8	v9	v10	v11	v12	v13	v14
0	0	0	0	0	0	0	0	0	0	0
1	7758	2376	1646	928	656	402	360	288	308	200	166	144	110	92	104
2	100516	18224	8578	3862	2450	1356	1018	622	460	370	258	228	144	122	114
3	203496	35854	18910	11072	8188	5746	4900	3856	3074	2618	2084	1602	1372	1168	1258
4	1099014	100372	50460	24408	15610	10044	7704	4838	3632	2506	1920	1742	1332	1192	878
5	871508	83036	50332	22600	12784	7990	4190	2746	1696	1094	704	456	326	310	278

Depth 0 B/L Skipped 0 OK, missed 0
Depth 1 B/L Skipped 0.562021628562 OK, missed 0.104636808059
Depth 2 B/L Skipped 0.409636172162 OK, missed 0.0572473036714
Depth 3 B/L Skipped 0.533629873939 OK, missed 0.0710749702248
Depth 4 B/L Skipped 0.40861880006 OK, missed 0.0420139188042
Depth 5 B/L Skipped 0.548936351772 OK, missed 0.0282911914643
Depth 0 FT OK 0, BAD 0
Depth 1 FT OK 0.647881586095, BAD 0.124845686633
Depth 2 FT OK 0.467815540053, BAD 0.0682141891647
Depth 3 FT OK 0.597869456844, BAD 0.086194750094
Depth 4 FT OK 0.455283711514, BAD 0.0524258274247
Depth 5 FT OK 0.586041564604, BAD 0.0327140115397
--Return--
> /Users/cropleyb/Dropbox/pente/pentai/run_ai.py(174)play_some_games()->None
-> st()
(Pdb) l
169		        print results
170		        cs = abg_m.choice_stats
171		        print cs
172		        cs.set_threshold(0.98)
173		        print cs.f_t_disp()
174  ->	        st()
175		
176		#cs.filtered_bad_relative_to_best_n_worst(depth=2)
177		
178		import sys
179		
(Pdb) cs.set_threshold(.1)
(Pdb) print cs.f_t_disp()
Depth 0 FT OK 0, BAD 0
Depth 1 FT OK 0.648634635327, BAD 0.110698237124
Depth 2 FT OK 0.465798085032, BAD 0.0637071946481
Depth 3 FT OK 0.597348194061, BAD 0.0816739801415
Depth 4 FT OK 0.453866224879, BAD 0.0470754771924
Depth 5 FT OK 0.584383673737, BAD 0.0220706721696
(Pdb) cs.set_threshold(.01)
(Pdb) print cs.f_t_disp()
Depth 0 FT OK 0, BAD 0
Depth 1 FT OK 0.64817786776, BAD 0.108574885191
Depth 2 FT OK 0.465108115415, BAD 0.0621698939222
Depth 3 FT OK 0.597088089198, BAD 0.080549316198
Depth 4 FT OK 0.453489832842, BAD 0.0458346349021
Depth 5 FT OK 0.583602727901, BAD 0.0213213451163
(Pdb) cs.set_threshold(.001)
(Pdb) print cs.f_t_disp()
Depth 0 FT OK 0, BAD 0
Depth 1 FT OK 0.647684064984, BAD 0.10779714582
Depth 2 FT OK 0.464474634538, BAD 0.061370981734
Depth 3 FT OK 0.5968048171, BAD 0.0798858908381
Depth 4 FT OK 0.453316076416, BAD 0.0451266135643
Depth 5 FT OK 0.583134160399, BAD 0.0209384911822
