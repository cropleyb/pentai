#:kivy 1.1.0
#:import my pentai.gui.scale.MyScale
# Use "my" own scaling due to issues with screen resolution and Kivy dp

# Globally set lots of size defaults
<Label>:
    font_size: 25 * my.dp

<TitleLabel@Label>:
    color: (0.8, 0.5, 0.8, 1)

<SectionTitle@Label>:
    color: (0.5, 0.6, 0.8, 1)
    halign: "center"
    text_size: self.size
    size_hint_y: None
    height: 30 * my.dp

<SmallLabel@Label>:
    font_size: 20 * my.dp
    padding_x: 20 * my.dp
    text_size: self.size

<TinyLabel@Label>:
    font_size: .03 * my.dp
    text_size: self.size
    padding_x: 20 * my.dp
    color: (0.5, 0.5, 0.5, 1)

<TextInput>:
    font_size: 25 * my.dp

<MyCategoryLabel@Label>:
    font_size: 22 * my.dp

<MyBigLabel@Label>:
    font_size: 30 * my.dp
    bold: True

<MySpinnerOption@SpinnerOption>:
    font_size: 20 * my.dp

<MySpinnerDropdown@Dropdown>:
    font_size: 20 * my.dp

<OptionsSetting>:
    GridLayout:
        rows: 1

        SmallLabel:
            text: root.text
            valign: "middle"

        MySpinner:
            id: spinner_id
            values: root.values
            valign: 'bottom'
            size_hint_x: .6
            font_size: 20 * my.dp
            on_text: root.save_value

        # Padding only.
        Label:
            size_hint_x: .05

    TinyLabel:
        text: root.desc
        size_hint_y: .8

<HSpacer>:
    size_hint_y: None
    height: 5
    canvas:
        Color:
            rgba: .3, .3, .3, 1
        Rectangle:
            pos: self.x, self.center_y
            size: self.width, 1

<VSpacer>:
    size_hint_x: None
    width: 5
    canvas:
        Color:
            rgba: .7, .7, .7, 1
        Rectangle:
            pos: self.center_x, self.y
            size: 1, self.height

<BigCheckBox@CheckBox>:
    canvas:
        Clear:
        Color:
            # Grey background
            rgba: .6, .6, .6, .5
        Rectangle:
            size: 25 * my.dp, 25 * my.dp
            pos: int(self.center_x - 13 * my.dp), int(self.center_y - 13 * my.dp)
        Color:
            rgba: .443, 0.848, 0.926, 1
        Rectangle:
            source: 'atlas://data/images/defaulttheme/checkbox%s_%s' % (('_radio' if self.group else ''), ('on' if self.active else 'off'))
            size: 40 * my.dp, 40 * my.dp
            pos: int(self.center_x - 20 * my.dp), int(self.center_y - 20 * my.dp)

<MySlider@Slider>:
    canvas:
        Clear:
        Color:
            rgb: 1, 1, 1
        BorderImage:
            border: (0, 18, 0, 18) if self.orientation == 'horizontal' else (18, 0, 18, 0)
            pos: (self.x + self.padding, self.center_y - 18 * my.dp) if self.orientation == 'horizontal' else (self.center_x - 18, self.y + self.padding)
            size: (self.width - self.padding * 2, 36 * my.dp) if self.orientation == 'horizontal' else (36 * my.dp, self.height - self.padding * 2 * my.dp)
            source: 'atlas://data/images/defaulttheme/slider{}_background{}'.format(self.orientation[0], '_disabled' if self.disabled else '')
        Rectangle:
            pos: (self.value_pos[0] - 16 * my.dp, self.center_y - 17 * my.dp) if self.orientation == 'horizontal' else (self.center_x - 16 * my.dp, self.value_pos[1] - 16 * my.dp)
            size: (32 * my.dp, 32 * my.dp)
            source: 'atlas://data/images/defaulttheme/slider_cursor{}'.         format('_disabled' if self.disabled else '')

<CheckBoxList>:

<CheckBoxRow@GridLayout>:
    rows: 1

    Label:
        text: root.value

    BigCheckBox:
        group: root.group
        size_hint_x: 0.1

    # This is just padding
    Label:
        size_hint_x: 0.2

<TwoLevelCompositeListItem>:
    height: 60 * my.dp
    rows: 2

<ConfirmPopup>:
    content:
    GridLayout:
        rows: 2
        Label:
            text: root.confirm_prompt
            font_size: 20 * my.dp
        GridLayout:
            cols: 2
            MyButton:
                text: "Cancel"
                font_size: 20 * my.dp
                on_release: root.clear()
            MyButton:
                text: "OK"
                font_size: 20 * my.dp
                on_release: root.ok_confirm()

<Section>:
    cols: 1
    height: self.minimum_height
    size_hint_y: None
    SectionTitle:
        text: root.title
    HSpacer:
        id: h_spacer_id
    SLPart:
        text: root.text
        on_ref_press: root.follow_link(*args)


<GoodByeScreen>:
    GridLayout:
        cols: 1
        Label:
            size_hint: (1, 0.1)
            text: "Thanks for playing\nPentAI!"
            font_size: 40 * my.dp
            halign: 'center'


<SLPart@Label>:
    size_hint_y: None
    text_size: (.95 * root.width), None
    height: self.texture_size[1]
    strip: False
    markup: True

<ScrollableLabel>:
    GridLayout:
        id: gl_id
        cols: 1
        height: self.minimum_height
        size_hint_y: None
        SLPart:
            text: root.text1
            id: label1_id
        SLPart:
            text: root.text2
            id: label2_id

<MyScrollableLabel>:
    size_hint_y: .8
    GridLayout:
        # This GridLayout and its children are due to an issue with
        # Kivy textures that cannot be allocated because they are too big:
        # https://github.com/kivy/kivy/issues/2119
        id: gl_id
        cols: 1
        height: self.minimum_height
        size_hint_y: None

        SLPart:
            text: root.text1
            id: label1_id
        SLPart:
            text: root.text2
            id: label2_id
        SLPart:
            text: root.text3
            id: label3_id
        SLPart:
            text: root.text4
            id: label4_id
        SLPart:
            text: root.text5
            id: label5_id
        SLPart:
            text: root.text6
            id: label6_id

<MyScrollable>:
    cols: 1
    id: gl_id
    height: self.minimum_height
    size_hint_y: None


<HelpScreen>:
    GridLayout:
        cols: 1
        id: gl_id
        TitleLabel:
            size_hint: 1, .07
            markup: True
            text: root.heading

        HSpacer:
    
        MyScrollableLabel:
            id: scrollable_id

        GridLayout:
            cols: 1
            size_hint: 1, .07

            MyButton:
                id: return_id
                text: "Return"
                on_press: root.app.pop_screen()

<NewHelpScreen>:
    GridLayout:
        cols: 1
        id: gl_id
        TitleLabel:
            size_hint: 1, .07
            markup: True
            text: root.title_text

        HSpacer:
    
        ScrollView:
            # This is for switching help text
            id: scrollable_id

        GridLayout:
            cols: 1
            size_hint: 1, .07

            MyButton:
                id: return_id
                text: "Return"
                on_press: root.app.pop_screen()

<ReviewButtons>:
    size_hint_x: .3
    cols: 1
    MyButton:
        id: rematch_id
        text: "Rematch"
        on_release: root.ps.rematch()
    MyButton:
        text: "Continue"
        on_release: root.ps.set_review_mode(False)
    MyButton:
        id: beginning_id
        text: "Beginning"
        on_release: root.ps.go_to_the_beginning()
    MyButton:
        text: "Forward"
        silent: True
        id: forward_id
        on_release: root.ps.go_forwards_one()
    MyButton:
        text: "Back"
        on_release: root.ps.go_backwards_one()
    MyButton:
        id: menu_id
        text: "Menu"
        on_release: root.ps.app.show_menu_screen()

<PlayButtons>:
    size_hint_x: .3
    cols: 1

    MyButton:
        id: rematch_id
        text: "Rematch"
        on_release: root.ps.rematch()
    MyButton:
        text: "Review"
        id: review_id
        on_release: root.ps.set_review_mode(True)
    MyButton:
        text: "Take Back"
        on_release: root.ps.take_back_move()
    MyButton:
        text: "Settings"
        on_release: root.ps.app.show_settings_screen()
    MyButton:
        id: help_id
        text: "Help"
        on_release: root.ps.show_help()
    MyButton:
        id: menu_id
        text: "Menu"
        on_release: root.ps.confirm_menu_screen()

<PenteScreen>:
    RelativeLayout:
        pos: self.parent.board_offset
        canvas:
            Rectangle:
                source: 'media/41-old-wooden-board.jpg'
                size: self.size
            Color:
                rgba: 0, 0, 0, 1
            Line:
                points: root.gridlines
                width: 2 * my.dp
            Color:
                rgba: root.border_colour
            Line:
                points: root.border_lines
                joint: 'none'
                width: root.border_width
            Color:
                rgba: root.illegal_rect_color
            Rectangle:
                pos: root.illegal_rect_pos
                size: root.illegal_rect_size

        FloatLayout:
            id: float_layout_id

    GridLayout:
        cols: 2
        size_hint: 1, None
        height: root.board_offset[1]
        canvas.before:
            Color:
                rgba: .3, .6, .9, 1
            Rectangle:
                # self here refers to the widget i.e GridLayout
                pos: self.pos
                size: self.size
        GridLayout:
            rows: 1

            GridLayout:
                # This is for switching panel buttons
                rows: 1
                size_hint: (.35, 1)
                id: panel_buttons_id
            
            GridLayout:
                rows: 2
                # TODO: duplication
                MyBigLabel:
                    id: black_time_id
                    text: ""
                MyBigLabel:
                MyBigLabel:
                    id: p1_id
                    text: root.player_name[1]
                    markup: True
                MyBigLabel:

                MyBigLabel:
                    id: white_time_id
                    text: ""
                MyBigLabel:
                MyBigLabel:
                    id: p2_id
                    text: root.player_name[2]
                    markup: True
                MyBigLabel:

    RelativeLayout:
        pos: (0,0)
        canvas:
            Color:
                rgba: root.confirm_rect_color
            Rectangle:
                size: (root.size[0], self.parent.board_offset[1])

        Label:
            id: confirm_text_id
            size_hint_y: .35
            color: root.confirm_text_color
            font_size: 65 * my.dp
            text: "Confirm Here"

        Label:
            id: win_method_id
            markup: True
            size_hint_x: 1.2
            size_hint_y: .35
            color: (.99, 0.31, 0.25, 1)

<SettingsScreen>:
    GridLayout:
        cols: 1
        TitleLabel:
            text: "PentAI Settings"
            size_hint_y: .08

        HSpacer:

        ScrollView:
            size_hint_y: .8
            GridLayout:
                id: gl_id
                cols: 1
                height: self.minimum_height
                size_hint_y: 1.7

                SectionTitle:
                    text: "User Interface"
                    size_hint_y: .15

                HSpacer:

                OptionsSetting:
                    id: guide_id
                    text: "Guide"
                    values: ("Off", "On", "Restart")
                    desc: "The Guide helps you to learn how to use PentAI"
                    key: "guide_setting"
                    on_value: root.set_guide()

                HSpacer:

                SwitchSetting:
                    text: "Mark Moves"
                    desc: "Mark the last two moves, each with a dot in the centre"
                    key: "mark_moves"

                HSpacer:

                SwitchSetting:
                    text: "Show Captures"
                    desc: "Show pieces that were captured last move as transparent ghost pieces"
                    key: "mark_captures"

                HSpacer:

                SwitchSetting:
                    text: "Show Legend"
                    desc: "For those who play a lot"
                    key: "show_legend"
                    #on_value: root.set_confirmation_popups()

                HSpacer:

                OptionsSetting:
                    text: "Move Confirmation"
                    values: ("None Required", "Off Board")
                    desc: "For small screens or while travelling"
                    key: "move_confirmation"

                HSpacer:

                SliderSetting:
                    text: "Minimum Wait Time"
                    desc: "Minimum time to wait for the AI to play (secs)"
                    min: 0
                    max: 2
                    step: .1
                    key: "minimum_wait"
                            #text: "%.1f" % s_id.value

                HSpacer:

                SwitchSetting:
                    text: "Show Confirmation Popups"
                    desc: "For major actions such as exiting"
                    key: "confirm_popups"
                    on_value: root.set_confirmation_popups()

                HSpacer:

                SectionTitle:
                    text: "Players"
                    size_hint_y: .15

                HSpacer:

                OptionsSetting:
                    text: "Rematch first player"
                    values: ("Don't Swap", "Alternate", "Loser First")
                    desc: "Who goes first in a rematch?"
                    key: "rematch_first_player"

                HSpacer:

                OptionsSetting:
                    text: "First player colour"
                    values: ("Always White", "Always Black", "Keep The Same")
                    desc: "Which colour goes first"
                    key: "first_player_colour"

                HSpacer:

                SectionTitle:
                    text: "Openings Book"
                    size_hint_y: .15

                HSpacer:

                SwitchSetting:
                    text: "Add games"
                    desc: "Add my completed games to the openings book"
                    key: "add_games_to_ob"

                # Label:
                #     size_hint_y: .07

                # OptionsSetting:
                #     id: build_id
                #     text: "Build"
                #     key: "openings_book_building"

                # HSpacer:

                SectionTitle:
                    text: "Sound"
                    size_hint_y: .15

                HSpacer:

                SliderSetting:
                    text: "Effects Volume"
                    desc: "How loud should the sound effects be?"
                    min: 0
                    max: 1
                    key: "effects_volume"
                    display_factor: 100
                    on_value: root.adjust_volumes()

                HSpacer:

                SwitchSetting:
                    text: "Tick"
                    desc: "Should the clock make a ticking sound?"
                    key: "tick"

                HSpacer:

                SwitchSetting:
                    text: "Play win/loss sounds"
                    desc: "Should the end of a game play music?"
                    key: "win_loss_sound"

                HSpacer:

                SliderSetting:
                    text: "Music Volume"
                    desc: "How loud should the music be?"
                    min: 0
                    max: 1
                    key: "music_volume"
                    display_factor: 100
                    on_value: root.adjust_volumes()

                HSpacer:

        GridLayout:
            rows: 1
            size_hint: (1, .06)

            MyButton:
                id: return_id
                text: "Return"
                on_press: root.app.pop_screen()

            MyButton:
                id: help_id
                text: "Help"
                on_press: root.app.show_settings_help()

<Piece>:
    Image:
        id: image
        source: root.source
        center: 0, 0

