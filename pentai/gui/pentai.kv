#:kivy 1.1.0
#:import my pentai.gui.scale.MyScale
# Use "my" own scaling due to issues with screen resolution and Kivy dp

# Globally set lots of size defaults
<Label>:
    font_size: 25 * my.dp

<TitleLabel@Label>:
    color: (0.8, 0.5, 0.8, 1)

<SectionTitle@Label>:
    color: (0.5, 0.6, 0.8, 1)
    halign: "center"
    text_size: self.size
    size_hint_y: None
    height: 30 * my.dp

<SmallLabel@Label>:
    font_size: 20 * my.dp
    padding_x: 20 * my.dp
    text_size: self.size

<TinyLabel@Label>:
    font_size: .03 * my.dp
    text_size: self.size
    padding_x: 20 * my.dp
    color: (0.5, 0.5, 0.5, 1)

<TextInput>:
    font_size: 25 * my.dp

<MyCategoryLabel@Label>:
    font_size: 22 * my.dp

<MyBigLabel@Label>:
    font_size: 30 * my.dp
    bold: True

<MySpinnerOption@SpinnerOption>:
    font_size: 20 * my.dp

<MySpinnerDropdown@Dropdown>:
    font_size: 20 * my.dp

<OptionsSetting>:
    GridLayout:
        rows: 1

        SmallLabel:
            text: root.text
            valign: "middle"

        MySpinner:
            id: spinner_id
            values: root.values
            valign: 'bottom'
            size_hint_x: .6
            font_size: 20 * my.dp
            on_text: root.save_value

        # Padding only.
        Label:
            size_hint_x: .05

    TinyLabel:
        text: root.desc
        size_hint_y: .8

<HSpacer>:
    size_hint_y: None
    height: 5
    canvas:
        Color:
            rgba: .3, .3, .3, 1
        Rectangle:
            pos: self.x, self.center_y
            size: self.width, 1

<VSpacer>:
    size_hint_x: None
    width: 5
    canvas:
        Color:
            rgba: .7, .7, .7, 1
        Rectangle:
            pos: self.center_x, self.y
            size: 1, self.height

<BigCheckBox@CheckBox>:
    canvas:
        Clear:
        Color:
            # Grey background
            rgba: .6, .6, .6, .5
        Rectangle:
            size: 25 * my.dp, 25 * my.dp
            pos: int(self.center_x - 13 * my.dp), int(self.center_y - 13 * my.dp)
        Color:
            rgba: .443, 0.848, 0.926, 1
        Rectangle:
            source: 'atlas://data/images/defaulttheme/checkbox%s_%s' % (('_radio' if self.group else ''), ('on' if self.active else 'off'))
            size: 40 * my.dp, 40 * my.dp
            pos: int(self.center_x - 20 * my.dp), int(self.center_y - 20 * my.dp)

<MySlider@Slider>:
    canvas:
        Clear:
        Color:
            rgb: 1, 1, 1
        BorderImage:
            border: (0, 18, 0, 18) if self.orientation == 'horizontal' else (18, 0, 18, 0)
            pos: (self.x + self.padding, self.center_y - 18 * my.dp) if self.orientation == 'horizontal' else (self.center_x - 18, self.y + self.padding)
            size: (self.width - self.padding * 2, 36 * my.dp) if self.orientation == 'horizontal' else (36 * my.dp, self.height - self.padding * 2 * my.dp)
            source: 'atlas://data/images/defaulttheme/slider{}_background{}'.format(self.orientation[0], '_disabled' if self.disabled else '')
        Rectangle:
            pos: (self.value_pos[0] - 16 * my.dp, self.center_y - 17 * my.dp) if self.orientation == 'horizontal' else (self.center_x - 16 * my.dp, self.value_pos[1] - 16 * my.dp)
            size: (32 * my.dp, 32 * my.dp)
            source: 'atlas://data/images/defaulttheme/slider_cursor{}'.         format('_disabled' if self.disabled else '')

<CheckBoxList>:

<CheckBoxRow@GridLayout>:
    rows: 1

    Label:
        text: root.value

    BigCheckBox:
        group: root.group
        size_hint_x: 0.1

    # This is just padding
    Label:
        size_hint_x: 0.2

<TwoLevelCompositeListItem>:
    height: 60 * my.dp
    rows: 2

<ConfirmPopup>:
    content:
    GridLayout:
        rows: 2
        Label:
            text: root.confirm_prompt
            font_size: 20 * my.dp
        GridLayout:
            cols: 2
            MyButton:
                text: "Cancel"
                font_size: 20 * my.dp
                on_release: root.clear()
            MyButton:
                text: "OK"
                font_size: 20 * my.dp
                on_release: root.ok_confirm()

<Section>:
    cols: 1
    height: self.minimum_height
    size_hint_y: None
    SectionTitle:
        text: root.title
    HSpacer:
        id: h_spacer_id
    SLPart:
        text: root.text
        on_ref_press: root.follow_link(*args)


<GoodByeScreen>:
    GridLayout:
        cols: 1
        Label:
            size_hint: (1, 0.1)
            text: "Thanks for playing\nPentAI!"
            font_size: 40 * my.dp
            halign: 'center'


<SLPart@Label>:
    size_hint_y: None
    text_size: (.95 * root.width), None
    height: self.texture_size[1]
    strip: False
    markup: True

<ScrollableLabel>:
    GridLayout:
        id: gl_id
        cols: 1
        height: self.minimum_height
        size_hint_y: None
        SLPart:
            text: root.text1
            id: label1_id
        SLPart:
            text: root.text2
            id: label2_id

<MyScrollableLabel>:
    size_hint_y: .8
    GridLayout:
        # This GridLayout and its children are due to an issue with
        # Kivy textures that cannot be allocated because they are too big:
        # https://github.com/kivy/kivy/issues/2119
        id: gl_id
        cols: 1
        height: self.minimum_height
        size_hint_y: None

        SLPart:
            text: root.text1
            id: label1_id
        SLPart:
            text: root.text2
            id: label2_id
        SLPart:
            text: root.text3
            id: label3_id
        SLPart:
            text: root.text4
            id: label4_id
        SLPart:
            text: root.text5
            id: label5_id
        SLPart:
            text: root.text6
            id: label6_id

<MyScrollable>:
    cols: 1
    id: gl_id
    height: self.minimum_height
    size_hint_y: None


<HelpScreen>:
    GridLayout:
        cols: 1
        id: gl_id
        TitleLabel:
            size_hint: 1, .07
            markup: True
            text: root.heading

        HSpacer:
    
        MyScrollableLabel:
            id: scrollable_id

        GridLayout:
            cols: 1
            size_hint: 1, .07

            MyButton:
                id: return_id
                text: "Return"
                on_press: root.app.pop_screen()

<NewHelpScreen>:
    GridLayout:
        cols: 1
        id: gl_id
        TitleLabel:
            size_hint: 1, .07
            markup: True
            text: root.title_text

        HSpacer:
    
        ScrollView:
            # This is for switching help text
            id: scrollable_id

        GridLayout:
            cols: 1
            size_hint: 1, .07

            MyButton:
                id: return_id
                text: "Return"
                on_press: root.app.pop_screen()



